{"ast":null,"code":"import _defineProperty from \"C:/dev/next/next-todo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\next\\\\next-todo\\\\components\\\\TodoList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\n\nvar TrashCanIcon = function TrashCanIcon(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M9 19a1 1 0 0 1-2 0V9a1 1 0 0 1 2 0v10zm4 0a1 1 0 0 1-2 0V9a1 1 0 0 1 2 0v10zm4 0a1 1 0 0 1-2 0V9a1 1 0 0 1 2 0v10zm5-17v2H2V2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2H22zm-3 4v16H5V6H3v18h18V6h-2z\"\n    }, void 0, false, void 0, this)\n  }), void 0, false, void 0, this);\n};\n\n_c3 = TrashCanIcon;\nTrashCanIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\"\n};\n\nvar CheckMarkIcon = function CheckMarkIcon(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M20.285 2 9 13.567 3.714 8.556 0 12.272 9 21 24 5.715z\"\n    }, void 0, false, void 0, this)\n  }), void 0, false, void 0, this);\n};\n\n_c4 = CheckMarkIcon;\nCheckMarkIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\"\n};\nvar Container = styled.div.withConfig({\n  displayName: \"TodoList__Container\",\n  componentId: \"sc-1t8agvw-0\"\n})([\"width:100%;.todo-num{margin-left:12px;}.todo-list-header{padding:12px;position:relative;border-bottom:1px solid \", \";.todo-list-last-todo{font-size:14px;margin:0 0 8px;span{margin-left:12px;}}.todo-list-header-colors{display:flex;.todo-list-header-color-num{display:flex;margin-right:8px;p{font-size:14px;line-height:16px;margin:0;margin-left:6px;}.todo-list-header-round-color{width:16px;height:16px;border-radius:50%;}}}}.bg-blue{background-color:\", \";}.bg-green{background-color:\", \";}.bg-navy{background-color:\", \";}.bg-orange{background-color:\", \";}.bg-red{background-color:\", \";}.bg-yellow{background-color:\", \";}.todo-list{.todo-item{display:flex;justify-content:space-between;align-items:center;width:100%;height:52px;border-bottom:1px solid \", \";.todo-left-side{width:100%;height:100%;display:flex;align-items:center;.todo-color-block{width:12px;height:100%;}.checked-todo-text{color:\", \";text-decoration:line-through;}.todo-text{margin-left:12px;font-size:16px;}}.todo-right-side{display:flex;align-items:center;margin-right:12px;svg{&:first-child{margin-right:16px;}}.todo-trash-can{width:16px;path{fill:\", \";}}.todo-check-mark{fill:\", \";}.todo-button{width:20px;height:20px;border-radius:50%;border:1px solid \", \";background-color:transparent;outline:none;}}}}\"], palette.gray, palette.blue, palette.green, palette.navy, palette.orange, palette.red, palette.yellow, palette.gray, palette.gray, palette.deep_red, palette.deep_green, palette.gray);\n_c = Container;\n\nvar TodoList = function TodoList(_ref) {\n  _s();\n\n  var todos = _ref.todos;\n  //* 색깔 객체 구하기 1\n  var getTodoColorNums = useCallback(function () {\n    var red = 0;\n    var orange = 0;\n    var yellow = 0;\n    var green = 0;\n    var blue = 0;\n    var navy = 0;\n    todos.forEach(function (todo) {\n      switch (todo.color) {\n        case \"red\":\n          red += 1;\n          break;\n\n        case \"orange\":\n          orange += 1;\n          break;\n\n        case \"yellow\":\n          yellow += 1;\n          break;\n\n        case \"green\":\n          green += 1;\n          break;\n\n        case \"blue\":\n          blue += 1;\n          break;\n\n        case \"navy\":\n          navy += 1;\n          break;\n\n        default:\n          break;\n      }\n    });\n    return {\n      red: red,\n      orange: orange,\n      yellow: yellow,\n      green: green,\n      blue: blue,\n      navy: navy\n    };\n  }, [todos]); //* 객체의 문자열 인덱스 사용을 위한 타입\n\n  var todoColorNums = useMemo(getTodoColorNums, [todos]); //* 색깔 객체 구하기 2\n\n  var todoColorNums2 = useMemo(function () {\n    var colors = {};\n    todos.forEach(function (todo) {\n      var value = colors[todo.color];\n\n      if (!value) {\n        //* 존재하지않던 key라면\n        colors[\"\".concat(todo.color)] = 1;\n      } else {\n        //* 존재하는 키라면\n        colors[\"\".concat(todo.color)] = value + 1;\n      }\n    });\n    return colors;\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-list-last-todo\",\n        children: [\"\\uB0A8\\uC740 TODO\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [todos.length, \" \\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 22\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list-header-colors\",\n        children: Object.keys(todoColorNums2).map(function (color, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list-header-color-num\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-list-header-round-color bg-\".concat(color)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [todoColorNums2[color], \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: [todos.map(function (todo) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-left-side\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-color-block bg-\".concat(todo.color)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"todo-text \".concat(todo.checked ? \"checked-todo-text\" : \"\"),\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-rigth-side\",\n            children: [todo.checked && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TrashCanIcon, {\n                className: \"todo-trash-can\",\n                onClick: function onClick() {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(CheckMarkIcon, {\n                className: \"todo-check-mark\",\n                onClick: function onClick() {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true), !todo.checked && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"todo-button\",\n              onClick: function onClick() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 23\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, _this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, _this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TodoList, \"iqnEAzGAatX6Zg4mYTxeWiVv+fc=\");\n\n_c2 = TodoList;\nexport default TodoList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TodoList\");\n$RefreshReg$(_c3, \"TrashCanIcon\");\n$RefreshReg$(_c4, \"CheckMarkIcon\");","map":{"version":3,"sources":["C:/dev/next/next-todo/components/TodoList.tsx"],"names":["React","useMemo","useCallback","styled","palette","TrashCanIcon","CheckMarkIcon","Container","div","gray","blue","green","navy","orange","red","yellow","deep_red","deep_green","TodoList","todos","getTodoColorNums","forEach","todo","color","todoColorNums","todoColorNums2","colors","value","length","Object","keys","map","index","checked","text","id"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TodoType } from \"../types/todo\";\r\nimport palette from \"../styles/palette\";\r\n\r\nimport TrashCanIcon from \"../public/statics/svg/trash_can.svg\";\r\nimport CheckMarkIcon from \"../public/statics/svg/check_mark.svg\";\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  .todo-num {\r\n    margin-left: 12px;\r\n  }\r\n\r\n  .todo-list-header {\r\n    padding: 12px;\r\n    position: relative;\r\n    border-bottom: 1px solid ${palette.gray};\r\n\r\n    .todo-list-last-todo {\r\n      font-size: 14px;\r\n      margin: 0 0 8px;\r\n      span {\r\n        margin-left: 12px;\r\n      }\r\n    }\r\n\r\n    .todo-list-header-colors {\r\n      display: flex;\r\n      .todo-list-header-color-num {\r\n        display: flex;\r\n        margin-right: 8px;\r\n        p {\r\n          font-size: 14px;\r\n          line-height: 16px;\r\n          margin: 0;\r\n          margin-left: 6px;\r\n        }\r\n        .todo-list-header-round-color {\r\n          width: 16px;\r\n          height: 16px;\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .bg-blue {\r\n    background-color: ${palette.blue};\r\n  }\r\n  .bg-green {\r\n    background-color: ${palette.green};\r\n  }\r\n  .bg-navy {\r\n    background-color: ${palette.navy};\r\n  }\r\n  .bg-orange {\r\n    background-color: ${palette.orange};\r\n  }\r\n  .bg-red {\r\n    background-color: ${palette.red};\r\n  }\r\n  .bg-yellow {\r\n    background-color: ${palette.yellow};\r\n  }\r\n\r\n  .todo-list {\r\n    .todo-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 100%;\r\n      height: 52px;\r\n      border-bottom: 1px solid ${palette.gray};\r\n\r\n      .todo-left-side {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        .todo-color-block {\r\n          width: 12px;\r\n          height: 100%;\r\n        }\r\n        .checked-todo-text {\r\n          color: ${palette.gray};\r\n          text-decoration: line-through;\r\n        }\r\n        .todo-text {\r\n          margin-left: 12px;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n      .todo-right-side {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 12px;\r\n        svg {\r\n          &:first-child {\r\n            margin-right: 16px;\r\n          }\r\n        }\r\n        .todo-trash-can {\r\n          width: 16px;\r\n          path {\r\n            fill: ${palette.deep_red};\r\n          }\r\n        }\r\n        .todo-check-mark {\r\n          fill: ${palette.deep_green};\r\n        }\r\n        .todo-button {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          border: 1px solid ${palette.gray};\r\n          background-color: transparent;\r\n          outline: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n    todos : TodoType[];\r\n}\r\n\r\nconst TodoList: React.FC<IProps> = ({ todos }) => {\r\n    //* 색깔 객체 구하기 1\r\n    const getTodoColorNums = useCallback(() => {\r\n        let red = 0;\r\n        let orange = 0;\r\n        let yellow = 0;\r\n        let green = 0;\r\n        let blue = 0;\r\n        let navy = 0;\r\n        todos.forEach((todo) => {\r\n        switch (todo.color) {\r\n            case \"red\":\r\n            red += 1;\r\n            break;\r\n            case \"orange\":\r\n            orange += 1;\r\n            break;\r\n            case \"yellow\":\r\n            yellow += 1;\r\n            break;\r\n            case \"green\":\r\n            green += 1;\r\n            break;\r\n            case \"blue\":\r\n            blue += 1;\r\n            break;\r\n            case \"navy\":\r\n            navy += 1;\r\n            break;\r\n            default:\r\n            break;\r\n        }\r\n        });\r\n\r\n        return {\r\n        red,\r\n        orange,\r\n        yellow,\r\n        green,\r\n        blue,\r\n        navy,\r\n        };\r\n    }, [todos]);\r\n\r\n    //* 객체의 문자열 인덱스 사용을 위한 타입\r\n    type ObjectIndexType = {\r\n        [key: string]: number | undefined;\r\n    };\r\n\r\n    const todoColorNums = useMemo(getTodoColorNums, [todos]);\r\n\r\n    //* 색깔 객체 구하기 2\r\n    const todoColorNums2 = useMemo(() => {\r\n        const colors: ObjectIndexType = {};\r\n        todos.forEach((todo) => {\r\n            const value = colors[todo.color];\r\n            if (!value) {\r\n                //* 존재하지않던 key라면\r\n                colors[`${todo.color}`] = 1;\r\n            } else {\r\n                //* 존재하는 키라면\r\n                colors[`${todo.color}`] = value + 1;\r\n            }\r\n        });\r\n        return colors;\r\n    }, [todos]);\r\n\r\n    \r\n    return (\r\n        <Container>\r\n          <div className=\"todo-list-header\">\r\n            <p className=\"todo-list-last-todo\">\r\n              남은 TODO<span>{todos.length} 개</span>\r\n            </p>\r\n            <div className=\"todo-list-header-colors\">\r\n              {Object.keys(todoColorNums2).map((color, index) => (\r\n                <div className=\"todo-list-header-color-num\" key={index}>\r\n                  <div className={`todo-list-header-round-color bg-${color}`}/>\r\n                    <p>{todoColorNums2[color]}개</p>\r\n                  </div>\r\n              ))}\r\n              </div>\r\n            </div>\r\n            <ul className=\"todo-list\">\r\n              {todos.map((todo) => (\r\n                <li className=\"todo-item\" key={todo.id}>\r\n                  <div className=\"todo-left-side\">\r\n                    <div className={`todo-color-block bg-${todo.color}`} />\r\n                      <p className={`todo-text ${todo.checked ? \"checked-todo-text\" : \"\"}`}>\r\n                        {todo.text}\r\n                      </p>\r\n                    </div>\r\n                  <div className=\"todo-rigth-side\">\r\n                    {todo.checked && (\r\n                      <>\r\n                        <TrashCanIcon\r\n                          className=\"todo-trash-can\"\r\n                          onClick={() => {}}\r\n                        />\r\n                        <CheckMarkIcon\r\n                          className=\"todo-check-mark\"\r\n                          onClick={() => {}}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {!todo.checked && (\r\n                      <button type=\"button\" className=\"todo-button\" onClick={() => {}}/>\r\n                    )}\r\n                  </div>\r\n                </li>\r\n              ))};\r\n            </ul>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}