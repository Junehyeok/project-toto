{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\sang_\\\\next-todo\\\\pages\\\\_document.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\ny;\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 37\n        }, this))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [initialProps.styles, sheet.getStyleElement()]\n        }, void 0, true)\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"https://fonts.googleapis.com/css?family=Noto+Sans:400,700&display=swap\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,700&display=swap&subset=korean\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["C:/Users/sang_/next-todo/pages/_document.tsx"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","y","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,IACAC,IADA,EAEAC,IAFA,EAGAC,IAHA,EAIAC,UAJA,QAMO,eANP;AAOA,SAASC,gBAAT,QAAiC,mBAAjC;AACAC,CAAC;;AACD,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAC9B,eAAaQ,eAAb,CAA6BC,GAA7B,EAAmD;AAC/C,UAAMC,KAAK,GAAG,IAAIL,gBAAJ,EAAd;AACA,UAAMM,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACAH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACjBD,kBAAkB,CAAC;AACfE,QAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IACrBL,KAAK,CAACM,aAAN,eAAoB,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAApB;AAFe,OAAD,CADlB;;AAKA,YAAME,YAAY,GAAG,MAAMjB,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACGQ,YADH;AAEAC,QAAAA,MAAM,eACF;AAAA,qBACCD,YAAY,CAACC,MADd,EAECR,KAAK,CAACS,eAAN,EAFD;AAAA;AAHJ;AASH,KAhBD,SAgBU;AACNT,MAAAA,KAAK,CAACU,IAAN;AACH;AACA;;AACDC,EAAAA,MAAM,GAAG;AACT,wBACI,QAAC,IAAD;AAAA,8BACA,QAAC,IAAD;AAAA,gCACI;AACA,UAAA,IAAI,EAAC,wEADL;AAEA,UAAA,GAAG,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AACA,UAAA,IAAI,EAAC,yFADL;AAEA,UAAA,GAAG,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAWA;AAAA,gCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA5C6B;;AA+ClC,eAAed,UAAf","sourcesContent":["import Document, {\r\nHtml,\r\nHead,\r\nMain,\r\nNextScript,\r\nDocumentContext,\r\n} from \"next/document\";\r\nimport { ServerStyleSheet } from \"styled-components\";\r\ny\r\nclass MyDocument extends Document {\r\n    static async getInitialProps(ctx: DocumentContext) {\r\n        const sheet = new ServerStyleSheet();\r\n        const originalRenderPage = ctx.renderPage;\r\n        \r\n        try {\r\n            ctx.renderPage = () =>\r\n            originalRenderPage({\r\n                enhanceApp: (App) => (props) =>\r\n                sheet.collectStyles(<App {...props} />),\r\n            });\r\n            const initialProps = await Document.getInitialProps(ctx);\r\n            return {\r\n            ...initialProps,\r\n            styles: (\r\n                <>\r\n                {initialProps.styles}\r\n                {sheet.getStyleElement()}\r\n                </>\r\n            ),\r\n            };\r\n        } finally {\r\n            sheet.seal();\r\n        }\r\n        }\r\n        render() {\r\n        return (\r\n            <Html>\r\n            <Head>\r\n                <link\r\n                href=\"https://fonts.googleapis.com/css?family=Noto+Sans:400,700&display=swap\"\r\n                rel=\"stylesheet\"\r\n                />\r\n                <link\r\n                href=\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,700&display=swap&subset=korean\"\r\n                rel=\"stylesheet\"\r\n                />\r\n            </Head>\r\n            <body>\r\n                <Main />\r\n                <NextScript />\r\n            </body>\r\n            </Html>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyDocument;\r\n"]},"metadata":{},"sourceType":"module"}