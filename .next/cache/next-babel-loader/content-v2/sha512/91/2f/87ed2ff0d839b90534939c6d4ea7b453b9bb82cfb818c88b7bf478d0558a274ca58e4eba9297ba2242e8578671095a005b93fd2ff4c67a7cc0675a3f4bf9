{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\sang_\\\\next-todo\\\\components\\\\TodoList.tsx\";\nimport React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\nconst Container = styled.div`\n  width: 100%;\n\n  .todo-num {\n    margin-left: 12px;\n  }\n\n  .todo-list-header {\n    padding: 12px;\n    position: relative;\n    border-bottom: 1px solid ${palette.gray};\n\n    .todo-list-last-todo {\n      font-size: 14px;\n      margin: 0 0 8px;\n      span {\n        margin-left: 12px;\n      }\n    }\n\n    .todo-list-header-colors {\n      display: flex;\n      .todo-list-header-color-num {\n        display: flex;\n        margin-right: 8px;\n        p {\n          font-size: 14px;\n          line-height: 16px;\n          margin: 0;\n          margin-left: 6px;\n        }\n        .todo-list-header-round-color {\n          width: 16px;\n          height: 16px;\n          border-radius: 50%;\n        }\n      }\n    }\n  }\n  .bg-blue {\n    background-color: ${palette.blue};\n  }\n  .bg-green {\n    background-color: ${palette.green};\n  }\n  .bg-navy {\n    background-color: ${palette.navy};\n  }\n  .bg-orange {\n    background-color: ${palette.orange};\n  }\n  .bg-red {\n    background-color: ${palette.red};\n  }\n  .bg-yellow {\n    background-color: ${palette.yellow};\n  }\n\n  .todo-list {\n    .todo-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      height: 52px;\n      border-bottom: 1px solid ${palette.gray};\n\n      .todo-left-side {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        .todo-color-block {\n          width: 12px;\n          height: 100%;\n        }\n        .checked-todo-text {\n          color: ${palette.gray};\n          text-decoration: line-through;\n        }\n        .todo-text {\n          margin-left: 12px;\n          font-size: 16px;\n        }\n      }\n      .todo-right-side {\n        display: flex;\n        align-items: center;\n        margin-right: 12px;\n        svg {\n          &:first-child {\n            margin-right: 16px;\n          }\n        }\n        .todo-trash-can {\n          width: 16px;\n          path {\n            fill: ${palette.deep_red};\n          }\n        }\n        .todo-check-mark {\n          fill: ${palette.deep_green};\n        }\n        .todo-button {\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          border: 1px solid ${palette.gray};\n          background-color: transparent;\n          outline: none;\n        }\n      }\n    }\n  }\n`;\n\nconst TodoList = ({\n  todos\n}) => {\n  //* 색깔 객체 구하기 1\n  const getTodoColorNums = useCallback(() => {\n    let red = 0;\n    let orange = 0;\n    let yellow = 0;\n    let green = 0;\n    let blue = 0;\n    let navy = 0;\n    todos.forEach(todo => {\n      switch (todo.color) {\n        case \"red\":\n          red += 1;\n          break;\n\n        case \"orange\":\n          orange += 1;\n          break;\n\n        case \"yellow\":\n          yellow += 1;\n          break;\n\n        case \"green\":\n          green += 1;\n          break;\n\n        case \"blue\":\n          blue += 1;\n          break;\n\n        case \"navy\":\n          navy += 1;\n          break;\n\n        default:\n          break;\n      }\n    });\n    return {\n      red,\n      orange,\n      yellow,\n      green,\n      blue,\n      navy\n    };\n  }, [todos]); //* 객체의 문자열 인덱스 사용을 위한 타입\n\n  const todoColorNums = useMemo(getTodoColorNums, [todos]); //* 색깔 객체 구하기 2\n\n  const todoColorNums2 = useMemo(() => {\n    const colors = {};\n    todos.forEach(todo => {\n      const value = colors[todo.color];\n\n      if (!value) {\n        //* 존재하지않던 key라면\n        colors[`${todo.color}`] = 1;\n      } else {\n        //* 존재하는 키라면\n        colors[`${todo.color}`] = value + 1;\n      }\n    });\n    return colors;\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-list-last-todo\",\n        children: [\"\\uB0A8\\uC740 TODO\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [todos.length, \" \\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list-header-colors\",\n        children: Object.keys(todoColorNums2).map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list-header-color-num\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `todo-list-header-round-color bg-${color}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [todoColorNums2[color], \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-left-side\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `todo-color-block bg-${todo.color}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `todo-text ${todo.checked ? \"checked-todo-text\" : \"\"}`,\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/sang_/next-todo/components/TodoList.tsx"],"names":["React","useMemo","useCallback","styled","palette","Container","div","gray","blue","green","navy","orange","red","yellow","deep_red","deep_green","TodoList","todos","getTodoColorNums","forEach","todo","color","todoColorNums","todoColorNums2","colors","value","length","Object","keys","map","index","checked","text","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+BF,OAAO,CAACG,IAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBH,OAAO,CAACI,IAAK;AACrC;AACA;AACA,wBAAwBJ,OAAO,CAACK,KAAM;AACtC;AACA;AACA,wBAAwBL,OAAO,CAACM,IAAK;AACrC;AACA;AACA,wBAAwBN,OAAO,CAACO,MAAO;AACvC;AACA;AACA,wBAAwBP,OAAO,CAACQ,GAAI;AACpC;AACA;AACA,wBAAwBR,OAAO,CAACS,MAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiCT,OAAO,CAACG,IAAK;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBH,OAAO,CAACG,IAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBH,OAAO,CAACU,QAAS;AACrC;AACA;AACA;AACA,kBAAkBV,OAAO,CAACW,UAAW;AACrC;AACA;AACA;AACA;AACA;AACA,8BAA8BX,OAAO,CAACG,IAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAlHA;;AAwHA,MAAMS,QAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9C;AACA,QAAMC,gBAAgB,GAAGhB,WAAW,CAAC,MAAM;AACvC,QAAIU,GAAG,GAAG,CAAV;AACA,QAAID,MAAM,GAAG,CAAb;AACA,QAAIE,MAAM,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","sourcesContent":["import React, { useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TodoType } from \"../types/todo\";\r\nimport palette from \"../styles/palette\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  .todo-num {\r\n    margin-left: 12px;\r\n  }\r\n\r\n  .todo-list-header {\r\n    padding: 12px;\r\n    position: relative;\r\n    border-bottom: 1px solid ${palette.gray};\r\n\r\n    .todo-list-last-todo {\r\n      font-size: 14px;\r\n      margin: 0 0 8px;\r\n      span {\r\n        margin-left: 12px;\r\n      }\r\n    }\r\n\r\n    .todo-list-header-colors {\r\n      display: flex;\r\n      .todo-list-header-color-num {\r\n        display: flex;\r\n        margin-right: 8px;\r\n        p {\r\n          font-size: 14px;\r\n          line-height: 16px;\r\n          margin: 0;\r\n          margin-left: 6px;\r\n        }\r\n        .todo-list-header-round-color {\r\n          width: 16px;\r\n          height: 16px;\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .bg-blue {\r\n    background-color: ${palette.blue};\r\n  }\r\n  .bg-green {\r\n    background-color: ${palette.green};\r\n  }\r\n  .bg-navy {\r\n    background-color: ${palette.navy};\r\n  }\r\n  .bg-orange {\r\n    background-color: ${palette.orange};\r\n  }\r\n  .bg-red {\r\n    background-color: ${palette.red};\r\n  }\r\n  .bg-yellow {\r\n    background-color: ${palette.yellow};\r\n  }\r\n\r\n  .todo-list {\r\n    .todo-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 100%;\r\n      height: 52px;\r\n      border-bottom: 1px solid ${palette.gray};\r\n\r\n      .todo-left-side {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        .todo-color-block {\r\n          width: 12px;\r\n          height: 100%;\r\n        }\r\n        .checked-todo-text {\r\n          color: ${palette.gray};\r\n          text-decoration: line-through;\r\n        }\r\n        .todo-text {\r\n          margin-left: 12px;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n      .todo-right-side {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 12px;\r\n        svg {\r\n          &:first-child {\r\n            margin-right: 16px;\r\n          }\r\n        }\r\n        .todo-trash-can {\r\n          width: 16px;\r\n          path {\r\n            fill: ${palette.deep_red};\r\n          }\r\n        }\r\n        .todo-check-mark {\r\n          fill: ${palette.deep_green};\r\n        }\r\n        .todo-button {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          border: 1px solid ${palette.gray};\r\n          background-color: transparent;\r\n          outline: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n    todos : TodoType[];\r\n}\r\n\r\nconst TodoList: React.FC<IProps> = ({ todos }) => {\r\n    //* 색깔 객체 구하기 1\r\n    const getTodoColorNums = useCallback(() => {\r\n        let red = 0;\r\n        let orange = 0;\r\n        let yellow = 0;\r\n        let green = 0;\r\n        let blue = 0;\r\n        let navy = 0;\r\n        todos.forEach((todo) => {\r\n        switch (todo.color) {\r\n            case \"red\":\r\n            red += 1;\r\n            break;\r\n            case \"orange\":\r\n            orange += 1;\r\n            break;\r\n            case \"yellow\":\r\n            yellow += 1;\r\n            break;\r\n            case \"green\":\r\n            green += 1;\r\n            break;\r\n            case \"blue\":\r\n            blue += 1;\r\n            break;\r\n            case \"navy\":\r\n            navy += 1;\r\n            break;\r\n            default:\r\n            break;\r\n        }\r\n        });\r\n\r\n        return {\r\n        red,\r\n        orange,\r\n        yellow,\r\n        green,\r\n        blue,\r\n        navy,\r\n        };\r\n    }, [todos]);\r\n\r\n    //* 객체의 문자열 인덱스 사용을 위한 타입\r\n    type ObjectIndexType = {\r\n        [key: string]: number | undefined;\r\n    };\r\n\r\n    const todoColorNums = useMemo(getTodoColorNums, [todos]);\r\n\r\n    //* 색깔 객체 구하기 2\r\n    const todoColorNums2 = useMemo(() => {\r\n        const colors: ObjectIndexType = {};\r\n        todos.forEach((todo) => {\r\n            const value = colors[todo.color];\r\n            if (!value) {\r\n                //* 존재하지않던 key라면\r\n                colors[`${todo.color}`] = 1;\r\n            } else {\r\n                //* 존재하는 키라면\r\n                colors[`${todo.color}`] = value + 1;\r\n            }\r\n        });\r\n        return colors;\r\n    }, [todos]);\r\n\r\n    return (\r\n        <Container>\r\n          <div className=\"todo-list-header\">\r\n            <p className=\"todo-list-last-todo\">\r\n              남은 TODO<span>{todos.length} 개</span>\r\n            </p>\r\n            <div className=\"todo-list-header-colors\">\r\n              {Object.keys(todoColorNums2).map((color, index) => (\r\n                <div className=\"todo-list-header-color-num\" key={index}>\r\n                  <div className={`todo-list-header-round-color bg-${color}`}/>\r\n                    <p>{todoColorNums2[color]}개</p>\r\n                  </div>\r\n              ))}\r\n              </div>\r\n            </div>\r\n            <ul className=\"todo-list\">\r\n            {todos.map((todo) => (\r\n              <li className=\"todo-item\" key={todo.id}>\r\n                <div className=\"todo-left-side\">\r\n                  <div className={`todo-color-block bg-${todo.color}`}>\r\n                    <p className={`todo-text ${todo.checked ? \"checked-todo-text\" : \"\"}`}>\r\n                      {todo.text}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))};\r\n            </ul>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}