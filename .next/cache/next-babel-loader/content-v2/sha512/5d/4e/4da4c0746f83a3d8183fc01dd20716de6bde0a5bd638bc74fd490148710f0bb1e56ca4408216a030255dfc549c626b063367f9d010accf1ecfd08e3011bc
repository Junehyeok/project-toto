{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/sang_/next-todo/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sang_\\\\next-todo\\\\components\\\\TodoList.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\\n  .todo-num {\\n    margin-left: 12px;\\n  }\\n\\n  .todo-list-header {\\n    padding: 12px;\\n    position: relative;\\n    border-bottom: 1px solid \", \";\\n\\n    .todo-list-last-todo {\\n      font-size: 14px;\\n      margin: 0 0 8px;\\n      span {\\n        margin-left: 12px;\\n      }\\n    }\\n\\n    .todo-list-header-colors {\\n      display: flex;\\n      .todo-list-header-color-num {\\n        display: flex;\\n        margin-right: 8px;\\n        p {\\n          font-size: 14px;\\n          line-height: 16px;\\n          margin: 0;\\n          margin-left: 6px;\\n        }\\n        .todo-list-header-round-color {\\n          width: 16px;\\n          height: 16px;\\n          border-radius: 50%;\\n        }\\n      }\\n    }\\n  }\\n  .bg-blue {\\n    background-color: \", \";\\n  }\\n  .bg-green {\\n    background-color: \", \";\\n  }\\n  .bg-navy {\\n    background-color: \", \";\\n  }\\n  .bg-orange {\\n    background-color: \", \";\\n  }\\n  .bg-red {\\n    background-color: \", \";\\n  }\\n  .bg-yellow {\\n    background-color: \", \";\\n  }\\n\\n  .todo-list {\\n    .todo-item {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      width: 100%;\\n      height: 52px;\\n      border-bottom: 1px solid \", \";\\n\\n      .todo-left-side {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        align-items: center;\\n        .todo-color-block {\\n          width: 12px;\\n          height: 100%;\\n        }\\n        .checked-todo-text {\\n          color: \", \";\\n          text-decoration: line-through;\\n        }\\n        .todo-text {\\n          margin-left: 12px;\\n          font-size: 16px;\\n        }\\n      }\\n      .todo-right-side {\\n        display: flex;\\n        align-items: center;\\n        margin-right: 12px;\\n        svg {\\n          &:first-child {\\n            margin-right: 16px;\\n          }\\n        }\\n        .todo-trash-can {\\n          width: 16px;\\n          path {\\n            fill: \", \";\\n          }\\n        }\\n        .todo-check-mark {\\n          fill: \", \";\\n        }\\n        .todo-button {\\n          width: 20px;\\n          height: 20px;\\n          border-radius: 50%;\\n          border: 1px solid \", \";\\n          background-color: transparent;\\n          outline: none;\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\nvar Container = styled.div(_templateObject(), palette.gray, palette.blue, palette.green, palette.navy, palette.orange, palette.red, palette.yellow, palette.gray, palette.gray, palette.deep_red, palette.deep_green, palette.gray);\n_c = Container;\n//* 색깔 객체 구하기 1\nvar getTodoColorNums = useCallback(function () {\n  var red = 0;\n  var orange = 0;\n  var yellow = 0;\n  var green = 0;\n  var blue = 0;\n  var navy = 0;\n  todos.forEach(function (todo) {\n    switch (todo.color) {\n      case \"red\":\n        red += 1;\n        break;\n\n      case \"orange\":\n        orange += 1;\n        break;\n\n      case \"yellow\":\n        yellow += 1;\n        break;\n\n      case \"green\":\n        green += 1;\n        break;\n\n      case \"blue\":\n        blue += 1;\n        break;\n\n      case \"navy\":\n        navy += 1;\n        break;\n\n      default:\n        break;\n    }\n  });\n  return {\n    red: red,\n    orange: orange,\n    yellow: yellow,\n    green: green,\n    blue: blue,\n    navy: navy\n  };\n}, [todos]); //* 객체의 문자열 인덱스 사용을 위한 타입\n\n//* 색깔 객체 구하기 2\nvar todoColorNums = useMemo(function () {\n  var colors = {};\n  todos.forEach(function (todo) {\n    var value = colors[todo.color];\n\n    if (!value) {\n      //* 존재하지않던 key라면\n      colors[\"\".concat(todo.color)] = 1;\n    } else {\n      //* 존재하는 키라면\n      colors[\"\".concat(todo.color)] = value + 1;\n    }\n  });\n  return colors;\n}, [todos]);\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-list-last-todo\",\n        children: [\"\\uB0A8\\uC740 TODO\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [todos.length, \" \\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 28\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list-header-colors\",\n        children: Object.keys(todoColorNums).map(function (color, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list-header-color-num\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-list-header-round-color bg-\".concat(color)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: todoColorNums\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = TodoList;\nexport default TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"sources":["C:/Users/sang_/next-todo/components/TodoList.tsx"],"names":["React","useMemo","useCallback","styled","palette","Container","div","gray","blue","green","navy","orange","red","yellow","deep_red","deep_green","getTodoColorNums","todos","forEach","todo","color","todoColorNums","colors","value","TodoList","length","Object","keys","map","index"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TodoType } from \"../types/todo\";\r\nimport palette from \"../styles/palette\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  .todo-num {\r\n    margin-left: 12px;\r\n  }\r\n\r\n  .todo-list-header {\r\n    padding: 12px;\r\n    position: relative;\r\n    border-bottom: 1px solid ${palette.gray};\r\n\r\n    .todo-list-last-todo {\r\n      font-size: 14px;\r\n      margin: 0 0 8px;\r\n      span {\r\n        margin-left: 12px;\r\n      }\r\n    }\r\n\r\n    .todo-list-header-colors {\r\n      display: flex;\r\n      .todo-list-header-color-num {\r\n        display: flex;\r\n        margin-right: 8px;\r\n        p {\r\n          font-size: 14px;\r\n          line-height: 16px;\r\n          margin: 0;\r\n          margin-left: 6px;\r\n        }\r\n        .todo-list-header-round-color {\r\n          width: 16px;\r\n          height: 16px;\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .bg-blue {\r\n    background-color: ${palette.blue};\r\n  }\r\n  .bg-green {\r\n    background-color: ${palette.green};\r\n  }\r\n  .bg-navy {\r\n    background-color: ${palette.navy};\r\n  }\r\n  .bg-orange {\r\n    background-color: ${palette.orange};\r\n  }\r\n  .bg-red {\r\n    background-color: ${palette.red};\r\n  }\r\n  .bg-yellow {\r\n    background-color: ${palette.yellow};\r\n  }\r\n\r\n  .todo-list {\r\n    .todo-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 100%;\r\n      height: 52px;\r\n      border-bottom: 1px solid ${palette.gray};\r\n\r\n      .todo-left-side {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        .todo-color-block {\r\n          width: 12px;\r\n          height: 100%;\r\n        }\r\n        .checked-todo-text {\r\n          color: ${palette.gray};\r\n          text-decoration: line-through;\r\n        }\r\n        .todo-text {\r\n          margin-left: 12px;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n      .todo-right-side {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 12px;\r\n        svg {\r\n          &:first-child {\r\n            margin-right: 16px;\r\n          }\r\n        }\r\n        .todo-trash-can {\r\n          width: 16px;\r\n          path {\r\n            fill: ${palette.deep_red};\r\n          }\r\n        }\r\n        .todo-check-mark {\r\n          fill: ${palette.deep_green};\r\n        }\r\n        .todo-button {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          border: 1px solid ${palette.gray};\r\n          background-color: transparent;\r\n          outline: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n    todos : TodoType[];\r\n}\r\n\r\n//* 색깔 객체 구하기 1\r\nconst getTodoColorNums = useCallback(() => {\r\n    let red = 0;\r\n    let orange = 0;\r\n    let yellow = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    let navy = 0;\r\n    todos.forEach((todo) => {\r\n      switch (todo.color) {\r\n        case \"red\":\r\n          red += 1;\r\n          break;\r\n        case \"orange\":\r\n          orange += 1;\r\n          break;\r\n        case \"yellow\":\r\n          yellow += 1;\r\n          break;\r\n        case \"green\":\r\n          green += 1;\r\n          break;\r\n        case \"blue\":\r\n          blue += 1;\r\n          break;\r\n        case \"navy\":\r\n          navy += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return {\r\n      red,\r\n      orange,\r\n      yellow,\r\n      green,\r\n      blue,\r\n      navy,\r\n    };\r\n}, [todos]);\r\n\r\n//* 객체의 문자열 인덱스 사용을 위한 타입\r\ntype ObjectIndexType = {\r\n    [key: string]: number | undefined;\r\n};\r\n\r\n//* 색깔 객체 구하기 2\r\nconst todoColorNums = useMemo(() => {\r\n    const colors: ObjectIndexType = {};\r\n    todos.forEach((todo) => {\r\n        const value = colors[todo.color];\r\n        if (!value) {\r\n            //* 존재하지않던 key라면\r\n            colors[`${todo.color}`] = 1;\r\n        } else {\r\n            //* 존재하는 키라면\r\n            colors[`${todo.color}`] = value + 1;\r\n        }\r\n    });\r\n    return colors;\r\n}, [todos]);\r\n\r\nconst TodoList: React.FC<IProps> = ({ todos }) => {\r\n    return (\r\n        <Container>\r\n            <div className=\"todo-list-header\">\r\n                <p className=\"todo-list-last-todo\">\r\n                    남은 TODO<span>{todos.length} 개</span>\r\n                </p>\r\n                <div className=\"todo-list-header-colors\">\r\n                    {Object.keys(todoColorNums).map((color, index) => (\r\n                        <div className=\"todo-list-header-color-num\" key={index}>\r\n                            <div className={`todo-list-header-round-color bg-${color}`}/>\r\n                            <p>{todoColorNums}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}